{"ast":null,"code":"import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { b as setCSSProperty, e as elementChildren, s as setInnerHTML, c as createElement } from '../shared/utils.mjs';\nfunction Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      slidesPerViewAutoSlideSize: 320,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        setInnerHTML(tempDOM, slideEl);\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      setInnerHTML(slideEl, slide);\n    }\n    if (params.cache) {\n      swiper.virtual.cache[index] = slideEl;\n    }\n    return slideEl;\n  }\n  function update(force, beforeInit, forceActiveIndex) {\n    const {\n      slidesPerGroup,\n      centeredSlides,\n      slidesPerView,\n      loop: isLoop,\n      initialSlide\n    } = swiper.params;\n    if (beforeInit && !isLoop && initialSlide > 0) {\n      return;\n    }\n    const {\n      addSlidesBefore,\n      addSlidesAfter,\n      slidesPerViewAutoSlideSize\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = typeof forceActiveIndex === 'undefined' ? swiper.activeIndex || 0 : forceActiveIndex;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesPerViewNumeric;\n    if (slidesPerView === 'auto') {\n      if (slidesPerViewAutoSlideSize) {\n        let swiperSize = swiper.size;\n        if (!swiperSize) {\n          swiperSize = swiper.isHorizontal() ? swiper.el.getBoundingClientRect().width : swiper.el.getBoundingClientRect().height;\n        }\n        slidesPerViewNumeric = Math.max(1, Math.ceil(swiperSize / slidesPerViewAutoSlideSize));\n      } else {\n        slidesPerViewNumeric = 1;\n      }\n    } else {\n      slidesPerViewNumeric = slidesPerView;\n    }\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerViewNumeric / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerViewNumeric / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerViewNumeric + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerViewNumeric : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = \"\".concat(offset - Math.abs(swiper.cssOverflowAdjustment()), \"px\");\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slides.filter(el => el.matches(\".\".concat(swiper.params.slideClass, \", swiper-slide\"))).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slides.filter(el => el.matches(\".\".concat(swiper.params.slideClass, \"[data-swiper-slide-index=\\\"\").concat(slideIndex, \"\\\"], swiper-slide[data-swiper-slide-index=\\\"\").concat(slideIndex, \"\\\"]\"))).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = \"\".concat(offset - Math.abs(swiper.cssOverflowAdjustment()), \"px\");\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n          // shift cache indexes\n          Object.keys(swiper.virtual.cache).forEach(key => {\n            if (key > slidesIndexes) {\n              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n              swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n              delete swiper.virtual.cache[key];\n            }\n          });\n        }\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n        // shift cache indexes\n        Object.keys(swiper.virtual.cache).forEach(key => {\n          if (key > slidesIndexes) {\n            swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n            swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n            delete swiper.virtual.cache[key];\n          }\n        });\n      }\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(\".\".concat(swiper.params.slideClass, \", swiper-slide\")));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"virtual\"));\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    update(false, true);\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', \"\".concat(swiper.virtualSize, \"px\"));\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}\nexport { Virtual as default };","map":{"version":3,"names":["g","getDocument","b","setCSSProperty","e","elementChildren","s","setInnerHTML","c","createElement","Virtual","_ref","swiper","extendParams","on","emit","virtual","enabled","slides","cache","slidesPerViewAutoSlideSize","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","cssModeTimeout","document","from","undefined","to","offset","slidesGrid","tempDOM","slide","index","params","slideEl","call","children","isElement","slideClass","setAttribute","update","force","beforeInit","forceActiveIndex","slidesPerGroup","centeredSlides","slidesPerView","loop","isLoop","initialSlide","previousFrom","previousTo","previousSlidesGrid","previousOffset","cssMode","updateActiveIndex","activeIndex","offsetProp","rtlTranslate","isHorizontal","slidesPerViewNumeric","swiperSize","size","el","getBoundingClientRect","width","height","Math","max","ceil","slidesAfter","slidesBefore","floor","min","length","Object","assign","onRendered","updateSlides","updateProgress","updateSlidesClasses","forEach","style","concat","abs","cssOverflowAdjustment","getSlides","slidesToRender","i","push","prependIndexes","appendIndexes","getSlideIndex","slideIndex","filter","matches","remove","loopFrom","loopTo","slidesEl","append","prepend","sort","a","appendSlide","prependSlide","newActiveIndex","numberOfNewSlides","Array","isArray","unshift","newCache","keys","cachedIndex","cachedEl","cachedElIndex","getAttribute","parseInt","slideTo","removeSlide","slidesIndexes","key","splice","removeAllSlides","domSlidesAssigned","passedParams","classNames","containerModifierClass","watchSlidesProgress","originalParams","_immediateVirtual","clearTimeout","setTimeout","wrapperEl","virtualSize","default"],"sources":["C:/Users/admin/Documents/Projet perso web/beyond-netero/node_modules/swiper/modules/virtual.mjs"],"sourcesContent":["import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { b as setCSSProperty, e as elementChildren, s as setInnerHTML, c as createElement } from '../shared/utils.mjs';\n\nfunction Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      slidesPerViewAutoSlideSize: 320,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        setInnerHTML(tempDOM, slideEl);\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      setInnerHTML(slideEl, slide);\n    }\n    if (params.cache) {\n      swiper.virtual.cache[index] = slideEl;\n    }\n    return slideEl;\n  }\n  function update(force, beforeInit, forceActiveIndex) {\n    const {\n      slidesPerGroup,\n      centeredSlides,\n      slidesPerView,\n      loop: isLoop,\n      initialSlide\n    } = swiper.params;\n    if (beforeInit && !isLoop && initialSlide > 0) {\n      return;\n    }\n    const {\n      addSlidesBefore,\n      addSlidesAfter,\n      slidesPerViewAutoSlideSize\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = typeof forceActiveIndex === 'undefined' ? swiper.activeIndex || 0 : forceActiveIndex;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesPerViewNumeric;\n    if (slidesPerView === 'auto') {\n      if (slidesPerViewAutoSlideSize) {\n        let swiperSize = swiper.size;\n        if (!swiperSize) {\n          swiperSize = swiper.isHorizontal() ? swiper.el.getBoundingClientRect().width : swiper.el.getBoundingClientRect().height;\n        }\n        slidesPerViewNumeric = Math.max(1, Math.ceil(swiperSize / slidesPerViewAutoSlideSize));\n      } else {\n        slidesPerViewNumeric = 1;\n      }\n    } else {\n      slidesPerViewNumeric = slidesPerView;\n    }\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerViewNumeric / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerViewNumeric / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerViewNumeric + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerViewNumeric : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`)).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`)).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n          // shift cache indexes\n          Object.keys(swiper.virtual.cache).forEach(key => {\n            if (key > slidesIndexes) {\n              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n              swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n              delete swiper.virtual.cache[key];\n            }\n          });\n        }\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n        // shift cache indexes\n        Object.keys(swiper.virtual.cache).forEach(key => {\n          if (key > slidesIndexes) {\n            swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n            swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n            delete swiper.virtual.cache[key];\n          }\n        });\n      }\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    update(false, true);\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}\n\nexport { Virtual as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}